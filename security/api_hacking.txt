first Install Docker
then install crapi from github repo
then install Burpsuite
add jwt editor extension in Burpsuite


TOP TEN OWASP

1 API1:2019 - BROKEN OBJECT LEVEL AUTHORIZATION (IDOR)
  API tend to expose endpoints that handle object identifiers,
  creating a wide attack surface level Access Control issue.
  Object level autorization checks should be considered in every
  function that access a data source using input from the user

2 API2:2019 - BROKEN USER AUTHENTICATION
  Authetication mechanisms are often implemented incorrectly,
  allowing attackers to compromise authentication tokens or to
  exploit implementation flaws to assume other user's identities
  temporarily or permanently. Compromising the system's ability to
  identify the client/user, compromises API Security overall

3 API:2019 - EXCESSIVE DATA EXPOSURE
  Looking forward to generic implementation, developers tend to
  expose all object properties without considering their individual
  sensitivity, relying on clients to perform the data filtering before
  displaying it to the user.

4 API:2019 - LACK OF RESOURCES & RATE LIMITING
  Quite Often, API do not impose any restrictions on the size or
  number of resources that can be requested by the client/user. not
  only can this impact the API server performance, leading to
  Denial of Service(DOS), but also leaves the door open to
  authentication flaws such as brute force

5 API:2019 - BROKEN FUNCTION LEVEL AUTHORIZATION
  Complex access Control policies with different hierarchies,
  groups, and roles, and an unclear separation between
  administrative and regular functions, tend to lead to autorization
  flaws. By exploiting these issues, attackers gain access to other
  user's resources and/or administrative functions.

6 API:2019 - MASS ASSIGNMENT
 Binding client provided data(e.g JSON) to data models, without
 proper properties filtering based on a whitelist, usually lead to
 Mass Assignment. Either guessing Object properties, exploring
 other API endpoints, reading the documentation, or providing
 additional object properties in request payloads, allows attackers
 to modify object properties they are not supposed to.

8 API:2019 - INJECTION
  Injection flaws, such as SQL, NoSQL, Command Injection, etc.,
  occur when untrusted data is sent to an interpreter as part of a
  Command or query. The attacker's malicious data can trick the
  interpreter into executing unintended commands or accessing data
  without proper authorization.

9 BROKEN ACCESS CONTROL
  Vulnerabilities that allow attackers to bypass access controls and gain
  unauthorized access to resources or functionalities. This can occur when
  access controls are not properly implemented or enforced, or when user
  input is not properly validated.

10 JSON WEB TOKEN
  JWT Vulnerabilities typically arise due to flawed JWT handling within the
  application itself. JWT attacks involve a user sending modified JWTs to
  the server in order to achieve a malicious goal. Typically, this goal is to
  bypass authentication and access controls by impersonating another
  user who has already been authenticated.
   
   ALOGORIHM CONFUSING ATTACK
   NONE ALOGORIHM ATTACK